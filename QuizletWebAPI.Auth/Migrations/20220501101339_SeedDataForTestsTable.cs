using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace QuizletWebAPI.Auth.Migrations
{
    public partial class SeedDataForTestsTable : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "Tests",
                columns: new[] { "Id", "Answers", "Description", "Name", "Questions" },
                values: new object[,]
                {
                    { 1, "[{\"questionNumber\":1,\"bodyAnswer\":[{\"text\":\":\",\"isCorrect\":true},{\"text\":\";\",\"isCorrect\":false},{\"text\":\"!\",\"isCorrect\":false}]},{\"questionNumber\":2,\"bodyAnswer\":[{\"text\":\"string\",\"isCorrect\":false},{\"text\":\"boolean\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":true}]},{\"questionNumber\":3,\"bodyAnswer\":[{\"text\":\"Use classes.\",\"isCorrect\":false},{\"text\":\"Use interfaces.\",\"isCorrect\":true},{\"text\":\"Use enums.\",\"isCorrect\":false}]},{\"questionNumber\":4,\"bodyAnswer\":[{\"text\":\"@number\",\"isCorrect\":false},{\"text\":\"number[]\",\"isCorrect\":true},{\"text\":\"number?\",\"isCorrect\":false}]},{\"questionNumber\":5,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":true},{\"text\":\"destructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false}]},{\"questionNumber\":6,\"bodyAnswer\":[{\"text\":\"protected\",\"isCorrect\":false},{\"text\":\"public\",\"isCorrect\":false},{\"text\":\"async\",\"isCorrect\":true}]},{\"questionNumber\":7,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false},{\"text\":\"export\",\"isCorrect\":true}]},{\"questionNumber\":8,\"bodyAnswer\":[{\"text\":\"filter\",\"isCorrect\":true},{\"text\":\"map\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":false}]},{\"questionNumber\":9,\"bodyAnswer\":[{\"text\":\"Arrow function\",\"isCorrect\":false},{\"text\":\"Accessors\",\"isCorrect\":false},{\"text\":\"Using this.propertyName\",\"isCorrect\":true}]}]", "TypeScript knowledge test", "Test 1", "[{\"number\":1,\"body\":\"Which of the following does TypeScript use to specify types?\"},{\"number\":2,\"body\":\"Which of the following is NOT a type used in TypeScript?\"},{\"number\":3,\"body\":\"How can we specify properties and methods for an object in TypeScript?\"},{\"number\":4,\"body\":\"How else can Array\\u003Cnumber\\u003E be written in TypeScript?\"},{\"number\":5,\"body\":\"In which of these does a class take parameters?\"},{\"number\":6,\"body\":\"Which is NOT an access modifier?\"},{\"number\":7,\"body\":\"Which keyword allows us to share information between files in TypeScript?\"},{\"number\":8,\"body\":\"Which is an array method to generate a new array based on a condition?\"},{\"number\":9,\"body\":\"How is a property accessible within a class?\"}]" },
                    { 2, "[{\"questionNumber\":1,\"bodyAnswer\":[{\"text\":\":\",\"isCorrect\":true},{\"text\":\";\",\"isCorrect\":false},{\"text\":\"!\",\"isCorrect\":false}]},{\"questionNumber\":2,\"bodyAnswer\":[{\"text\":\"string\",\"isCorrect\":false},{\"text\":\"boolean\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":true}]},{\"questionNumber\":3,\"bodyAnswer\":[{\"text\":\"Use classes.\",\"isCorrect\":false},{\"text\":\"Use interfaces.\",\"isCorrect\":true},{\"text\":\"Use enums.\",\"isCorrect\":false}]},{\"questionNumber\":4,\"bodyAnswer\":[{\"text\":\"@number\",\"isCorrect\":false},{\"text\":\"number[]\",\"isCorrect\":true},{\"text\":\"number?\",\"isCorrect\":false}]},{\"questionNumber\":5,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":true},{\"text\":\"destructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false}]},{\"questionNumber\":6,\"bodyAnswer\":[{\"text\":\"protected\",\"isCorrect\":false},{\"text\":\"public\",\"isCorrect\":false},{\"text\":\"async\",\"isCorrect\":true}]},{\"questionNumber\":7,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false},{\"text\":\"export\",\"isCorrect\":true}]},{\"questionNumber\":8,\"bodyAnswer\":[{\"text\":\"filter\",\"isCorrect\":true},{\"text\":\"map\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":false}]},{\"questionNumber\":9,\"bodyAnswer\":[{\"text\":\"Arrow function\",\"isCorrect\":false},{\"text\":\"Accessors\",\"isCorrect\":false},{\"text\":\"Using this.propertyName\",\"isCorrect\":true}]}]", "TypeScript knowledge test", "Test 2", "[{\"number\":1,\"body\":\"Which of the following does TypeScript use to specify types?\"},{\"number\":2,\"body\":\"Which of the following is NOT a type used in TypeScript?\"},{\"number\":3,\"body\":\"How can we specify properties and methods for an object in TypeScript?\"},{\"number\":4,\"body\":\"How else can Array\\u003Cnumber\\u003E be written in TypeScript?\"},{\"number\":5,\"body\":\"In which of these does a class take parameters?\"},{\"number\":6,\"body\":\"Which is NOT an access modifier?\"},{\"number\":7,\"body\":\"Which keyword allows us to share information between files in TypeScript?\"},{\"number\":8,\"body\":\"Which is an array method to generate a new array based on a condition?\"},{\"number\":9,\"body\":\"How is a property accessible within a class?\"}]" },
                    { 3, "[{\"questionNumber\":1,\"bodyAnswer\":[{\"text\":\":\",\"isCorrect\":true},{\"text\":\";\",\"isCorrect\":false},{\"text\":\"!\",\"isCorrect\":false}]},{\"questionNumber\":2,\"bodyAnswer\":[{\"text\":\"string\",\"isCorrect\":false},{\"text\":\"boolean\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":true}]},{\"questionNumber\":3,\"bodyAnswer\":[{\"text\":\"Use classes.\",\"isCorrect\":false},{\"text\":\"Use interfaces.\",\"isCorrect\":true},{\"text\":\"Use enums.\",\"isCorrect\":false}]},{\"questionNumber\":4,\"bodyAnswer\":[{\"text\":\"@number\",\"isCorrect\":false},{\"text\":\"number[]\",\"isCorrect\":true},{\"text\":\"number?\",\"isCorrect\":false}]},{\"questionNumber\":5,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":true},{\"text\":\"destructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false}]},{\"questionNumber\":6,\"bodyAnswer\":[{\"text\":\"protected\",\"isCorrect\":false},{\"text\":\"public\",\"isCorrect\":false},{\"text\":\"async\",\"isCorrect\":true}]},{\"questionNumber\":7,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false},{\"text\":\"export\",\"isCorrect\":true}]},{\"questionNumber\":8,\"bodyAnswer\":[{\"text\":\"filter\",\"isCorrect\":true},{\"text\":\"map\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":false}]},{\"questionNumber\":9,\"bodyAnswer\":[{\"text\":\"Arrow function\",\"isCorrect\":false},{\"text\":\"Accessors\",\"isCorrect\":false},{\"text\":\"Using this.propertyName\",\"isCorrect\":true}]}]", "TypeScript knowledge test", "Test 3", "[{\"number\":1,\"body\":\"Which of the following does TypeScript use to specify types?\"},{\"number\":2,\"body\":\"Which of the following is NOT a type used in TypeScript?\"},{\"number\":3,\"body\":\"How can we specify properties and methods for an object in TypeScript?\"},{\"number\":4,\"body\":\"How else can Array\\u003Cnumber\\u003E be written in TypeScript?\"},{\"number\":5,\"body\":\"In which of these does a class take parameters?\"},{\"number\":6,\"body\":\"Which is NOT an access modifier?\"},{\"number\":7,\"body\":\"Which keyword allows us to share information between files in TypeScript?\"},{\"number\":8,\"body\":\"Which is an array method to generate a new array based on a condition?\"},{\"number\":9,\"body\":\"How is a property accessible within a class?\"}]" },
                    { 4, "[{\"questionNumber\":1,\"bodyAnswer\":[{\"text\":\":\",\"isCorrect\":true},{\"text\":\";\",\"isCorrect\":false},{\"text\":\"!\",\"isCorrect\":false}]},{\"questionNumber\":2,\"bodyAnswer\":[{\"text\":\"string\",\"isCorrect\":false},{\"text\":\"boolean\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":true}]},{\"questionNumber\":3,\"bodyAnswer\":[{\"text\":\"Use classes.\",\"isCorrect\":false},{\"text\":\"Use interfaces.\",\"isCorrect\":true},{\"text\":\"Use enums.\",\"isCorrect\":false}]},{\"questionNumber\":4,\"bodyAnswer\":[{\"text\":\"@number\",\"isCorrect\":false},{\"text\":\"number[]\",\"isCorrect\":true},{\"text\":\"number?\",\"isCorrect\":false}]},{\"questionNumber\":5,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":true},{\"text\":\"destructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false}]},{\"questionNumber\":6,\"bodyAnswer\":[{\"text\":\"protected\",\"isCorrect\":false},{\"text\":\"public\",\"isCorrect\":false},{\"text\":\"async\",\"isCorrect\":true}]},{\"questionNumber\":7,\"bodyAnswer\":[{\"text\":\"constructor\",\"isCorrect\":false},{\"text\":\"import\",\"isCorrect\":false},{\"text\":\"export\",\"isCorrect\":true}]},{\"questionNumber\":8,\"bodyAnswer\":[{\"text\":\"filter\",\"isCorrect\":true},{\"text\":\"map\",\"isCorrect\":false},{\"text\":\"enum\",\"isCorrect\":false}]},{\"questionNumber\":9,\"bodyAnswer\":[{\"text\":\"Arrow function\",\"isCorrect\":false},{\"text\":\"Accessors\",\"isCorrect\":false},{\"text\":\"Using this.propertyName\",\"isCorrect\":true}]}]", "TypeScript knowledge test", "Test 4", "[{\"number\":1,\"body\":\"Which of the following does TypeScript use to specify types?\"},{\"number\":2,\"body\":\"Which of the following is NOT a type used in TypeScript?\"},{\"number\":3,\"body\":\"How can we specify properties and methods for an object in TypeScript?\"},{\"number\":4,\"body\":\"How else can Array\\u003Cnumber\\u003E be written in TypeScript?\"},{\"number\":5,\"body\":\"In which of these does a class take parameters?\"},{\"number\":6,\"body\":\"Which is NOT an access modifier?\"},{\"number\":7,\"body\":\"Which keyword allows us to share information between files in TypeScript?\"},{\"number\":8,\"body\":\"Which is an array method to generate a new array based on a condition?\"},{\"number\":9,\"body\":\"How is a property accessible within a class?\"}]" }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "Tests",
                keyColumn: "Id",
                keyValue: 4);
        }
    }
}
